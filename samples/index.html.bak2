<!DOCTYPE html>
<html class="ocks-org do-not-copy">
<meta charset="utf-8">
<title>Path Transitions</title>
<style>

@import url(../style.css?aea6f0a);

.x.axis line {
  shape-rendering: auto;
}

.line {
  fill: none;
  stroke: #000;
  stroke-width: 1.5px;
}

</style>
<script src="//d3js.org/d3.v3.min.js" charset="utf-8"></script></script>
<script>

    //BJONES This makes 40 random numbers
var n = 40,
    random = d3.random.normal(0, .2);

function chart(domain, interpolation, tick) {
  var data = d3.range(n).map(random);

  var margin = {top: 6, right: 0, bottom: 6, left: 40},
      width = 960 - margin.right,
      height = 120 - margin.top - margin.bottom;

  var x = d3.scale.linear()
      .domain(domain)
      .range([0, width]);

  var y = d3.scale.linear()
      .domain([-1, 1])
      .range([height, 0]);

  var line = d3.svg.line()
      .interpolate(interpolation)
      .x(function(d, i) { return x(i); })
      .y(function(d, i) { return y(d); });

  var svg = d3.select("body").append("p").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
      .style("margin-left", -margin.left + "px")
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  svg.append("defs").append("clipPath")
      .attr("id", "clip")
    .append("rect")
      .attr("width", width)
      .attr("height", height);

  svg.append("g")
      .attr("class", "y axis")
      .call(d3.svg.axis().scale(y).ticks(5).orient("left"));

  var path = svg.append("g")
      .attr("clip-path", "url(#clip)")
    .append("path")
      .datum(data)              //BJONES datum just points to what we are storing the data in... in this case the data array
      .attr("class", "line")
      .attr("d", line);

  tick(path, line, data, x);
}

</script>

<header></header>


<script>(function() {

var transition = d3.select({}).transition()
    .duration(150)
    .ease("linear");

chart([0, n - 1], "linear", function tick(path, line, data, x) {
  transition = transition.each(function() {

    //BJONES at the end of the transition add new data
    //BJONES loop seems to be that we pass the tick function to chart, which calls it.
    // then tick keeps getting called by transition().each(start
    
    // push a new data point onto the back
    data.push(random());

    // redraw the line, and then slide it to the left
    path
        .attr("d", line)
        .attr("transform", null)
      .transition()
        .attr("transform", "translate(" + x(-1) + ")");

    // pop the old data point off the front
    data.shift();

  }).transition().each("start", function() { tick(path, line, data, x); });
});

})();</script>

